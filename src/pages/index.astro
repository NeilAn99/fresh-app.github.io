---
import "../styles/global.css";
import "../styles/home.css";
/* ASTRO:COMPONENT_IMPORTS */

let title = "Fresh App Factory";
let sections = [
	{
		title: 'Astro',
		lines: [
			{
				items: [
					{ name: 'fresh-astro-project', title: 'Astro Project' },
				]
			}
		]
	},
	{
		title: 'Create React App',
		lines: [
			{
				items: [
					{ name: 'fresh-react-app', title: 'React App' },
					{ name: 'fresh-react-app-typescript', title: '+ TypeScript' },
				]
			}
		]
	},
	{
		title: 'Next.js',
		lines: [
			{
				items: [
					{ name: 'fresh-next-app', title: 'Next.js App' },
					{ name: 'fresh-next-app-typescript', title: '+ TypeScript' },
				]
			}
		]
	},
	{
		title: 'Redwood',
		lines: [
			{
				items: [
					{ name: 'fresh-redwood-app', title: 'Redwood App' },
					{ name: 'fresh-redwood-app-typescript', title: '+ TypeScript' },
				]
			}
		]
	},
	{
		title: 'Remix',
		lines: [
			{
				items: [
					{ name: 'fresh-remix-app', title: 'Remix App' },
					{ name: 'fresh-remix-app-typescript', title: '+ Vercel Deployment' },
				]
			}
		]
	},
	{
		title: 'Rush',
		lines: [
			{
				items: [
					{ name: 'fresh-rush-monorepo', title: 'Rush Monorepo' },
				]
			}
		]
	},
	{
		title: 'TSDX',
		lines: [
			{
				items: [
					{ name: 'fresh-tsdx-lib', title: 'TypeScript Library' },
				]
			},
			{
				items: [
					{ name: 'fresh-tsdx-react-component', title: 'React Component Library' },
					{ name: 'fresh-tsdx-react-component-with-storybook', title: '+ Storybook' },
				]
			}
		]
	},
	{
		title: 'T3',
		lines: [
			{
				items: [
					{ name: 'fresh-t3-app', title: 'T3 App' },
				]
			}
		]
	},
	{
		title: 'Vite',
		lines: [
			{
				items: [
					{ name: 'fresh-vite-app', title: 'Vanilla JS App' },
					{ name: 'fresh-vite-app-ts', title: '+ TypeScript' },
				]
			},
			{
				items: [
					{ name: 'fresh-vite-app-lit-element', title: 'Lit App' },
					{ name: 'fresh-vite-app-lit-element-ts', title: '+ TypeScript' },
				]
			},
			{
				items: [
					{ name: 'fresh-vite-app-preact', title: 'Preact App' },
					{ name: 'fresh-vite-app-preact-ts', title: '+ TypeScript' },
				]
			},
			{
				items: [
					{ name: 'fresh-vite-app-react', title: 'React App' },
					{ name: 'fresh-vite-app-react-ts', title: '+ TypeScript' },
				]
			},
			{
				items: [
					{ name: 'fresh-vite-app-svelte', title: 'Svelte App' },
					{ name: 'fresh-vite-app-svelte-ts', title: '+ TypeScript' },
				]
			},
			{
				items: [
					{ name: 'fresh-vite-app-vue', title: 'Vue App' },
					{ name: 'fresh-vite-app-vue-ts', title: '+ TypeScript' },
				]
			}
		]
	}
]
---

<html lang="en">

<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width" />
	<title>{title}</title>

	<link rel="icon" type="image/x-icon" href="/favicon.ico" />

	<style>
		header {
			display: flex;
			flex-direction: column;
			gap: 1em;
			max-width: min(100%, 68ch);
			padding-bottom: 1rem;
		}


		.g {
			display: inline-block;
			padding: 0.5ex 0.8ex;
			text-decoration: none;
			border: 1px solid #fff4;
			border-radius: 5px;
		}
	</style>
</head>

<body>
	<main>
		<header>
			<div>
				<h1><a href="https://github.com/fresh-app/factory">Fresh App Factory</a></h1>
			</div>
		</header>

		<table class="t">
			{sections.flatMap(section => {
			return (
			section.lines.map((line, i) => {
			return <tr>
				{i === 0 && <td rowspan={section.lines.length}>{section.title}</td>}
				<td>
					{line.items.map(item => {
					return <span> <a class="g" href={`https://github.com/fresh-app/${item.name}/generate`}>{item.title}</a></span>
					})}
				</td>
			</tr>
			})
			)
			})}
		</table>
		<!--

		You can also use imported framework components directly in your markup!
		
		Note: by default, these components are NOT interactive on the client.
		The `client:visible` directive tells Astro to make it interactive.
		
		See https://docs.astro.build/core-concepts/component-hydration/ 

		-->

		<!-- ASTRO:COMPONENT_MARKUP -->
	</main>
</body>

</html>
